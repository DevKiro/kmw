{{ 'announcement-scroller.css' | asset_url | stylesheet_tag }}

<style>
  #shopify-section-{{ section.id }} #section-{{ section.id }} {
    --ticker-animation-duration: 10s;
    --ticker-gap-x: 32px;
  }

  @media (max-width: 999px) {
    #shopify-section-{{ section.id }} #section-{{ section.id }} .vertical-padding {
      padding-bottom: {{ section.settings.padding_bottom_mobile }}px;
      padding-top: {{ section.settings.padding_top_mobile }}px;
    }
  }

  @media (min-width: 1000px) {
    #shopify-section-{{ section.id }} #section-{{ section.id }} .vertical-padding {
      padding-bottom: {{ section.settings.padding_bottom }}px;
      padding-top: {{ section.settings.padding_top }}px;
    }
  }

  {%- for block in section.blocks -%}
    #shopify-section-{{ section.id }} #section-{{ section.id }} .ticker__image-wrapper-{{ forloop.index }},
    #shopify-section-{{ section.id }} #section-{{ section.id }} .ticker__image-wrapper-{{ forloop.index }} .ticker__img {
      max-width: {{ block.settings.image_width }}px;
      min-width: {{ block.settings.image_width }}px;
    }
  {%- endfor -%}
</style>

{%- if section.blocks.size > 0 %}
  <ticker-bar
    id="section-{{ section.id }}"
    class="ticker ticker--anim-off ticker--reverseX js-ticker section section--{{ section.settings.vertical_margins }}"
    style="background-color:{{ section.settings.background_color }}; border-top: 1px solid {{ section.settings.border_color }}; border-bottom: 1px solid {{ section.settings.border_color }};"
    data-ticker-animation="{{ section.settings.ticker_animation }}"
    data-ticker-pause-hover="{{ section.settings.ticker_pause_hover }}"
  >
    <ul class="ticker__list vertical-padding">
      <!-- Initiate the first image -->
      {%- assign current_image = 1 -%}
      {%- for block in section.blocks -%}
        <!-- Assign content -->
        <li
          id="ticker-item--{{ forloop.index }}"
          class="ticker__item {{ block.settings.title_style }} {{ block.settings.title_size }}"
          style="color:{{ block.settings.text_color }};"
        >
          <span>{{- block.settings.text -}}</span>
          {%- if block.settings.image != blank -%}
            {%- capture sizes -%}100vw, {% if block.settings.image.aspect_ratio >= 1 %}50vw{% else %}37.5vw{% endif %}{%- endcapture -%}
            {%- capture image_content -%}
              {{-
                block.settings.image
                | image_url: width: 200
                | image_tag:
                  sizes: sizes,
                  widths: '20,30,40,50,60,70,80,90,100,200,300,400,500,600',
                  class: 'ticker__img'
              -}}
            {%- endcapture -%}
            {%- if block.settings.link != blank -%}
              <a
                href="{{ block.settings.link }}"
                class="ticker__image-wrapper ticker__image-wrapper-{{ forloop.index }}"
              >
                {{ image_content }}
              </a>
            {%- else -%}
              <div class="ticker__image-wrapper ticker__image-wrapper-{{ forloop.index }}">
                {{ image_content }}
              </div>
            {%- endif -%}
          {%- endif -%}
        </li>
        <!--
          Assign the first image and than loops through each content block with
          the first and second image alternating between each alternating content block
        -->
        {% comment %}
          {%- if section.settings.first_image != blank
            or section.settings.second_image != blank
            or section.settings.third_image != blank
          -%}
            {%- if current_image == 1 -%}
              {%- if section.settings.first_image != blank -%}
                {%- capture sizes -%}100vw, {% if section.settings.first_image.aspect_ratio >= 1 %}50vw{% else %}37.5vw{% endif %}{%- endcapture -%}
                <div
                  class="ticker__image-wrapper"
                >
                  {{-
                    section.settings.first_image
                    | image_url: width: 200
                    | image_tag:
                      sizes: sizes,
                      widths: '20,30,40,50,60,70,80,90,100,200,300,400,500,600',
                      class: 'ticker__img'
                  -}}
                </div>
              {%- endif -%}
              <!-- Switch to the second image -->
              {%- assign current_image = 2 -%}
            {%- else -%}
              {%- if section.settings.second_image != blank -%}
                {%- capture sizes -%}100vw, {% if section.settings.second_image.aspect_ratio >= 1 %}50vw{% else %}37.5vw{% endif %}{%- endcapture -%}
                <div
                  class="ticker__image-wrapper"
                  style=""
                >
                  {{-
                    section.settings.second_image
                    | image_url: width: 200
                    | image_tag:
                      sizes: sizes,
                      widths: '20,30,40,50,60,70,80,90,100,200,300,400,500,600',
                      class: 'ticker__img'
                  -}}
                </div>
              {%- endif -%}
              <!-- Switch back to the third image -->
              {%- assign current_image = 3 -%}
            {%- else -%}
              {%- if section.settings.third_image != blank -%}
                {%- capture sizes -%}100vw, {% if section.settings.third_image.aspect_ratio >= 1 %}50vw{% else %}37.5vw{% endif %}{%- endcapture -%}
                <div
                  class="ticker__image-wrapper"
                  style=""
                >
                  {{-
                    section.settings.third_image
                    | image_url: width: 200
                    | image_tag:
                      sizes: sizes,
                      widths: '20,30,40,50,60,70,80,90,100,200,300,400,500,600',
                      class: 'ticker__img'
                  -}}
                </div>
              {%- endif -%}
              <!-- Switch back to the first image -->
              {%- assign current_image = 1 -%}
            {%- endif -%}
          {%- endif -%}
        {% endcomment %}
      {%- endfor -%}
    </ul>
  </ticker-bar>
{%- endif -%}

<script>
  // utility functions
  if (!Util) function Util() {}

  Util.addClass = function (el, className) {
    var classList = className.split(' ');
    el.classList.add(classList[0]);
    if (classList.length > 1) Util.addClass(el, classList.slice(1).join(' '));
  };

  Util.removeClass = function (el, className) {
    var classList = className.split(' ');
    el.classList.remove(classList[0]);
    if (classList.length > 1) Util.removeClass(el, classList.slice(1).join(' '));
  };

  Util.osHasReducedMotion = function () {
    if (!window.matchMedia) return false;
    var matchMediaObj = window.matchMedia('(prefers-reduced-motion: reduce)');
    if (matchMediaObj) return matchMediaObj.matches;
    return false;
  };

  // File#: _1_ticker
  // Usage: bryan@screamingmouse.co
  (function () {
    var Ticker = function (element) {
      this.element = element;
      this.list = this.element.getElementsByTagName('ul')[0];
      this.items = this.list.children;
      this.paused = false;
      // clones info
      this.clones = this.list.innerHTML;
      this.clonesNumber = 1;
      this.itemsLength = this.items.length;
      // animation duration
      this.animationDuration = parseInt(
        getComputedStyle(document.querySelector('ticker-bar')).getPropertyValue('--ticker-animation-duration')
      );
      initTicker(this);
    };

    function initTicker(ticker) {
      // clone ticker children
      setTickerWidth(ticker);
      cloneItems(ticker);
      initAnimation(ticker);

      // resize/font loaded event
      ticker.element.addEventListener('update-ticker', function (event) {
        setTickerWidth(ticker);
        cloneItems(ticker);
      });

      // click on control button events
      ticker.element.addEventListener('anim-ticker', function (event) {
        ticker.paused = false;
        Util.removeClass(ticker.element, 'ticker--paused');
      });

      ticker.element.addEventListener('pause-ticker', function (event) {
        ticker.paused = true;
        Util.addClass(ticker.element, 'ticker--paused');
      });

      // all set
      Util.addClass(ticker.element, 'ticker--loaded');
    }

    function setTickerWidth(ticker) {
      var width = 0;
      for (var i = 0; i < ticker.itemsLength; i++) {
        width = width + getItemWidth(ticker.items[i]);
      }
      // check if we need to update the number of clones
      if (width < window.innerWidth) {
        ticker.clonesNumber = Math.ceil(window.innerWidth / width) * 2 - 1;
      } else {
        ticker.clonesNumber = 1;
      }

      // update list width
      ticker.list.style.width = (ticker.clonesNumber + 1) * width + 'px';
    }

    function getItemWidth(item) {
      var style = window.getComputedStyle(item);
      return parseFloat(style.marginRight) + parseFloat(style.marginLeft) + item.offsetWidth;
    }

    function cloneItems(ticker) {
      ticker.list.innerHTML = ticker.clones;
      for (var i = 0; i < ticker.clonesNumber; i++) {
        ticker.list.insertAdjacentHTML('beforeend', ticker.clones);
      }
      // update animation duration
      ticker.element.style.setProperty(
        '--ticker-animation-duration',
        ticker.animationDuration * (ticker.clonesNumber + 1) + 's'
      );
    }

    function initAnimation(ticker) {
      // init observer - animate ticker only when in viewport
      var observer = new IntersectionObserver(tickerObserve.bind(ticker));
      observer.observe(ticker.element);
    }

    function tickerObserve(entries) {
      if (entries[0].isIntersecting) {
        if (!this.paused) Util.addClass(this.element, 'ticker--animate');
      } else {
        Util.removeClass(this.element, 'ticker--animate');
      }
    }

    function initTickerController(controller) {
      // play/pause btn controller
      var tickerContainer = document.getElementById(controller.getAttribute('aria-controls'));
      if (!tickerContainer) return;
      var tickerList = tickerContainer.getElementsByClassName('js-ticker');
      if (tickerList.length < 1) tickerList = [tickerContainer];
      // detect click
      controller.addEventListener('click', function (event) {
        var playAnimation = controller.getAttribute('aria-pressed') == 'true';
        var animEvent = playAnimation ? 'anim-ticker' : 'pause-ticker';
        playAnimation
          ? controller.setAttribute('aria-pressed', 'false')
          : controller.setAttribute('aria-pressed', 'true');
        for (var i = 0; i < tickerList.length; i++) {
          tickerList[i].dispatchEvent(new CustomEvent(animEvent));
        }
      });
    }

    //initialize the Ticker objects
    var tickers = document.getElementsByClassName('js-ticker'),
      requestAnimationFrameSupported = window.requestAnimationFrame,
      reducedMotion = Util.osHasReducedMotion(),
      intersectionObserverSupported =
        'IntersectionObserver' in window &&
        'IntersectionObserverEntry' in window &&
        'intersectionRatio' in window.IntersectionObserverEntry.prototype;

    if (tickers.length > 0) {
      var tickersArray = [];
      for (var i = 0; i < tickers.length; i++) {
        if (!requestAnimationFrameSupported || reducedMotion || !intersectionObserverSupported) {
          // animation is off if requestAnimationFrame/IntersectionObserver is not supported or reduced motion is on
          Util.addClass(tickers[i], 'ticker--anim-off');
        } else {
          (function (i) {
            tickersArray.push(new Ticker(tickers[i]));
          })(i);
        }
      }

      if (tickersArray.length > 0) {
        var resizingId = false,
          customEvent = new CustomEvent('update-ticker');

        // on resize -> update ticker width
        window.addEventListener('resize', function () {
          clearTimeout(resizingId);
          resizingId = setTimeout(doneResizing, 500);
        });

        // wait for font to be loaded -> update ticker width
        if (document.fonts) {
          document.fonts.onloadingdone = function (fontFaceSetEvent) {
            doneResizing();
          };
        }

        function doneResizing() {
          for (var i = 0; i < tickersArray.length; i++) {
            (function (i) {
              tickersArray[i].element.dispatchEvent(customEvent);
            })(i);
          }
        }

        // ticker play/pause buttons
        var tickerControl = document.getElementsByClassName('js-ticker-control');
        if (tickerControl.length > 0) {
          for (var i = 0; i < tickerControl.length; i++) {
            if (!requestAnimationFrameSupported || reducedMotion || !intersectionObserverSupported) {
              Util.addClass(tickerControl[i], 'tt9-hide');
            } else {
              (function (i) {
                initTickerController(tickerControl[i]);
              })(i);
            }
          }
        }
      }
    }
  })();
</script>

{% schema %}
{
  "name": "Ticker bar",
  "tag": "section",
  "class": "shopify-section--ticker-bar",
  "max_blocks": 3,
  "blocks": [
    {
      "type": "content",
      "name": "Content",
      "settings": [
        {
          "type": "inline_richtext",
          "id": "text",
          "label": "Text",
          "default": "Welcome!"
        },
        {
          "type": "select",
          "id": "title_style",
          "label": "Text style",
          "options": [
            {
              "value": "heading",
              "label": "Heading"
            },
            {
              "value": "text--body",
              "label": "Text"
            }
          ],
          "default": "heading"
        },
        {
          "type": "select",
          "id": "title_size",
          "label": "Text size",
          "options": [
            {
              "value": "h1",
              "label": "Heading 1"
            },
            {
              "value": "h2",
              "label": "Heading 2"
            },
            {
              "value": "h3",
              "label": "Heading 3"
            },
            {
              "value": "h4",
              "label": "Heading 4"
            },
            {
              "value": "h5",
              "label": "Heading 5"
            },
            {
              "value": "h6",
              "label": "Heading 6"
            }
          ],
          "default": "h3"
        },
        {
          "type": "color",
          "id": "text_color",
          "label": "Color",
          "default": "#000000"
        },
        {
          "type": "header",
          "content": "Media after text"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "range",
          "id": "image_width",
          "min": 24,
          "max": 96,
          "step": 2,
          "unit": "px",
          "label": "Image width",
          "info": "200 x 200px .png recommended.",
          "default": 50
        },
        {
          "type": "url",
          "id": "link",
          "label": "Image link"
        }
      ]
    }
  ],
  "settings": [
    {
      "type": "select",
      "id": "ticker_animation",
      "label": "Animation",
      "options": [
        {
          "value": "off",
          "label": "None"
        },
        {
          "value": "on",
          "label": "Always"
        }
      ],
      "default": "on"
    },
    {
      "type": "select",
      "id": "ticker_pause_hover",
      "label": "Pause on hover",
      "options": [
        {
          "value": "off",
          "label": "None"
        },
        {
          "value": "on",
          "label": "Always"
        }
      ],
      "default": "on"
    },
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "header",
      "content": "Color"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "border_color",
      "label": "Border color",
      "default": "#cccccc"
    },
    {
      "type": "header",
      "content": "Spacing"
    },
    {
      "type": "select",
      "id": "vertical_margins",
      "label": "Vertical margins",
      "options": [
        {
          "value": "flush",
          "label": "None"
        },
        {
          "value": "always",
          "label": "Always"
        },
        {
          "value": "tight",
          "label": "Tight"
        },
        {
          "value": "narrow",
          "label": "Narrow"
        }
      ],
      "default": "flush"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Top padding",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Bottom padding",
      "default": 40
    },
    {
      "type": "header",
      "content": "Mobile"
    },
    {
      "type": "range",
      "id": "padding_top_mobile",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Top padding",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom_mobile",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Bottom padding",
      "default": 36
    }
  ],
  "presets": [
    {
      "name": "Ticker bar",
      "blocks": [
        {
          "type": "content"
        },
        {
          "type": "content"
        }
      ]
    }
  ]
}
{% endschema %}
